version: "3.8"

services:
  zookeeper:
    # image: wurstmeister/zookeeper:latest # TODO: Replace with official image
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: apache/kafka:3.7.1 # TODO: Replace with official image
    # image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    # environment:
    # KAFKA_ADVERTISED_HOST_NAME: kafka
    # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
    # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    # KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    # KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
    # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  spark:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark
    ports:
      - "8080:8080"
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    depends_on:
      - spark

  # fastapi:
  #   build: .
  #   environment:
  #     - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - kafka
  #     - spark
